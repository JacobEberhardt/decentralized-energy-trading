{
  "contractName": "Mortal",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "close",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Is inherited by derived contracts.\",\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Mortal\"},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}},\"notice\":\"Allows owners to permanently disable this smart contract.\"}},\"settings\":{\"compilationTarget\":{\"/Users/uhsiddiq/Documents/DET_Script/decentralized-energy-trading/contracts/Mortal.sol\":\"Mortal\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/uhsiddiq/Documents/DET_Script/decentralized-energy-trading/contracts/Mortal.sol\":{\"keccak256\":\"0xa4d663c01afa92b200c35dd921cd9c3ecf3c9a8c1b22d5cea504fbbde0b853de\",\"urls\":[\"bzzr://a28f4c37bd9afe6bafadfae331d311ae65e9e18ad4a7685d5c71741d389639a1\"]},\"/Users/uhsiddiq/Documents/DET_Script/decentralized-energy-trading/contracts/Ownable.sol\":{\"keccak256\":\"0xde99249b713e5e91775dd6c3f7305a5c73f4f068bc4273218ac422a2be7d9d44\",\"urls\":[\"bzzr://c315009a664f5337a8e1a067c38ab2059b404f77dca44ef358629c7c79cd7698\"]}},\"version\":1}",
  "bytecode": "0x6080604052600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156100915772bd138abd70e2f00903268f3db08f2d25677c9e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100d2565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36105ae8061015d6000396000f3fe608060405234801561001057600080fd5b5060043610610074576000357c01000000000000000000000000000000000000000000000000000000009004806343d726d614610079578063715018a6146100835780638da5cb5b1461008d5780638f32d59b146100d7578063f2fde38b146100f9575b600080fd5b61008161013d565b005b61008b6101d3565b005b61009561030e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100df610337565b604051808215151515815260200191505060405180910390f35b61013b6004803603602081101561010f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061038e565b005b610145610337565b15156101b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16ff5b6101db610337565b151561024f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610396610337565b151561040a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61041381610416565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561049e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061055d6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a165627a7a72305820e93814f67cb65c79bc3064f6df27271715918aa32c05cc72e925c40efbc3489e0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610074576000357c01000000000000000000000000000000000000000000000000000000009004806343d726d614610079578063715018a6146100835780638da5cb5b1461008d5780638f32d59b146100d7578063f2fde38b146100f9575b600080fd5b61008161013d565b005b61008b6101d3565b005b61009561030e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100df610337565b604051808215151515815260200191505060405180910390f35b61013b6004803603602081101561010f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061038e565b005b610145610337565b15156101b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16ff5b6101db610337565b151561024f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610396610337565b151561040a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61041381610416565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561049e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061055d6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a165627a7a72305820e93814f67cb65c79bc3064f6df27271715918aa32c05cc72e925c40efbc3489e0029",
  "sourceMap": "196:104:2:-;;;527:1:3;505:24;;:10;:24;;;501:136;;;548:42;539:6;;:51;;;;;;;;;;;;;;;;;;501:136;;;620:10;611:6;;:19;;;;;;;;;;;;;;;;;;501:136;680:6;;;;;;;;;;;647:40;;676:1;647:40;;;;;;;;;;;;196:104:2;;;;;;",
  "deployedSourceMap": "196:104:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;196:104:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;227:71;;;:::i;:::-;;1505:127:3;;;:::i;:::-;;749:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1077:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1796:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1796:101:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;227:71:2;937:9:3;:7;:9::i;:::-;929:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;288:3:2;267:26;;;1505:127:3;937:9;:7;:9::i;:::-;929:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1599:1;1562:40;;1583:6;;;;;;;;;;;1562:40;;;;;;;;;;;;1625:1;1608:6;;:19;;;;;;;;;;;;;;;;;;1505:127::o;749:71::-;787:7;809:6;;;;;;;;;;;802:13;;749:71;:::o;1077:84::-;1117:4;1150:6;;;;;;;;;;;1136:20;;:10;:20;;;1129:27;;1077:84;:::o;1796:101::-;937:9;:7;:9::i;:::-;929:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1864:28;1883:8;1864:18;:28::i;:::-;1796:101;:::o;2034:211::-;2123:1;2103:22;;:8;:22;;;;2095:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;;;;;;;;;;;2179:38;;;;;;;;;;;;2232:8;2223:6;;:17;;;;;;;;;;;;;;;;;;2034:211;:::o",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\nimport \"./Ownable.sol\";\n\n\n/**\n * @title Mortal\n * @notice Allows owners to permanently disable this smart contract.\n * @dev Is inherited by derived contracts.\n */\ncontract Mortal is Ownable {\n  function close() public onlyOwner {\n    selfdestruct(address(0x0));\n  }\n}\n",
  "sourcePath": "/Users/uhsiddiq/Documents/DET_Script/decentralized-energy-trading/contracts/Mortal.sol",
  "ast": {
    "absolutePath": "/Users/uhsiddiq/Documents/DET_Script/decentralized-energy-trading/contracts/Mortal.sol",
    "exportedSymbols": {
      "Mortal": [
        483
      ]
    },
    "id": 484,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 467,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:2"
      },
      {
        "absolutePath": "/Users/uhsiddiq/Documents/DET_Script/decentralized-energy-trading/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 468,
        "nodeType": "ImportDirective",
        "scope": 484,
        "sourceUnit": 608,
        "src": "33:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 469,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 607,
              "src": "215:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$607",
                "typeString": "contract Ownable"
              }
            },
            "id": 470,
            "nodeType": "InheritanceSpecifier",
            "src": "215:7:2"
          }
        ],
        "contractDependencies": [
          607
        ],
        "contractKind": "contract",
        "documentation": "@title Mortal\n@notice Allows owners to permanently disable this smart contract.\n@dev Is inherited by derived contracts.",
        "fullyImplemented": true,
        "id": 483,
        "linearizedBaseContracts": [
          483,
          607
        ],
        "name": "Mortal",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 481,
              "nodeType": "Block",
              "src": "261:37:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "307830",
                            "id": 477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "288:3:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "280:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "280:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 475,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4507,
                      "src": "267:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "267:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 480,
                  "nodeType": "ExpressionStatement",
                  "src": "267:26:2"
                }
              ]
            },
            "documentation": null,
            "id": 482,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 473,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 472,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 540,
                  "src": "251:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "251:9:2"
              }
            ],
            "name": "close",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "241:2:2"
            },
            "returnParameters": {
              "id": 474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "261:0:2"
            },
            "scope": 483,
            "src": "227:71:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 484,
        "src": "196:104:2"
      }
    ],
    "src": "0:301:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/uhsiddiq/Documents/DET_Script/decentralized-energy-trading/contracts/Mortal.sol",
    "exportedSymbols": {
      "Mortal": [
        483
      ]
    },
    "id": 484,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 467,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:2"
      },
      {
        "absolutePath": "/Users/uhsiddiq/Documents/DET_Script/decentralized-energy-trading/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 468,
        "nodeType": "ImportDirective",
        "scope": 484,
        "sourceUnit": 608,
        "src": "33:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 469,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 607,
              "src": "215:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$607",
                "typeString": "contract Ownable"
              }
            },
            "id": 470,
            "nodeType": "InheritanceSpecifier",
            "src": "215:7:2"
          }
        ],
        "contractDependencies": [
          607
        ],
        "contractKind": "contract",
        "documentation": "@title Mortal\n@notice Allows owners to permanently disable this smart contract.\n@dev Is inherited by derived contracts.",
        "fullyImplemented": true,
        "id": 483,
        "linearizedBaseContracts": [
          483,
          607
        ],
        "name": "Mortal",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 481,
              "nodeType": "Block",
              "src": "261:37:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "307830",
                            "id": 477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "288:3:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "280:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "280:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 475,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4507,
                      "src": "267:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "267:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 480,
                  "nodeType": "ExpressionStatement",
                  "src": "267:26:2"
                }
              ]
            },
            "documentation": null,
            "id": 482,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 473,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 472,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 540,
                  "src": "251:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "251:9:2"
              }
            ],
            "name": "close",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "241:2:2"
            },
            "returnParameters": {
              "id": 474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "261:0:2"
            },
            "scope": 483,
            "src": "227:71:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 484,
        "src": "196:104:2"
      }
    ],
    "src": "0:301:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2020-02-18T14:38:00.668Z",
  "devdoc": {
    "details": "Is inherited by derived contracts.",
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Mortal"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    },
    "notice": "Allows owners to permanently disable this smart contract."
  }
}